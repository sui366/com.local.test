<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.local.test.reptile.dao.SpiderDataDao" >
  <resultMap id="BaseResultMap" type="com.local.test.reptile.pojo.vo.SpiderDataVo" >
	<id column="id" property="id" jdbcType="VARCHAR" />
	<result column="task_id" property="taskId" jdbcType="INTEGER" />
	<result column="type_id" property="typeId" jdbcType="INTEGER" />
	<result column="imgSrc" property="imgSrc" jdbcType="VARCHAR" />
	<result column="title" property="title" jdbcType="VARCHAR" />
	<result column="abstract_content" property="abstractContent" jdbcType="VARCHAR" />
	<result column="content" property="content" jdbcType="VARCHAR" />
	<result column="publish_time" property="publishTime" jdbcType="TIMESTAMP" />
	<result column="cy_comment_count" property="cyCommentCount" jdbcType="BIGINT" />
	<result column="visit_count" property="visitCount" jdbcType="BIGINT" />
	<result column="content_url" property="contentUrl" jdbcType="VARCHAR" />
	<result column="tag" property="tag" jdbcType="VARCHAR" />
	<result column="author" property="author" jdbcType="VARCHAR" />
	<result column="starCount" property="starCount" jdbcType="INTEGER" />
	<result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <resultMap id="resultMap2" type="com.local.test.reptile.pojo.vo.SpiderDataVo" extends="BaseResultMap">
  	<result column="platform_id" property="platformId" jdbcType="INTEGER" />
  </resultMap>
  
  <select id="query" resultMap="resultMap2" parameterType="com.shunwang.business.framework.mybatis.query.ConditionQuery">
		select t.*, t2.platform_id 
		from spider_data t
		left join spider_type t2 on t.type_id=t2.id
		<include refid="conditionQuery.core" />
		order by
		<choose>
			<when test="paramMap.orderCol!=null">
				${paramMap.orderCol}
			</when>
			<otherwise>
				t.add_time desc
			</otherwise>
		</choose>
		
		<if test="paramMap.rp > 0">
			limit #{paramMap.firstResult} , #{paramMap.rp}
		</if>
  </select>
  <select id="queryCnt"
		parameterType="com.shunwang.business.framework.mybatis.query.ConditionQuery"
		resultType="java.lang.Integer">
		select count(*) from spider_data t
		<include refid="conditionQuery.core" />
  </select>
  <delete id="delete" parameterType="java.lang.Integer" >
    delete from spider_data
    where 
		id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="save" parameterType="com.local.test.reptile.pojo.po.SpiderData">
    insert into spider_data (
		id,
		task_id,
		type_id,
		imgSrc,
		title,
		abstract_content,
		content,
		publish_time,
		cy_comment_count,
		visit_count,
		content_url,
		tag,
		author,
		starCount,
		add_time
	)
    values (
		#{id,jdbcType=VARCHAR},
		#{taskId,jdbcType=INTEGER},
		#{typeId,jdbcType=INTEGER},
		#{imgSrc,jdbcType=VARCHAR},
		#{title,jdbcType=VARCHAR},
		#{abstractContent,jdbcType=VARCHAR},
		#{content,jdbcType=VARCHAR},
		#{publishTime,jdbcType=TIMESTAMP},
		#{cyCommentCount,jdbcType=BIGINT},
		#{visitCount,jdbcType=BIGINT},
		#{contentUrl,jdbcType=VARCHAR},
		#{tag,jdbcType=VARCHAR},
		#{author,jdbcType=VARCHAR},
		#{starCount,jdbcType=INTEGER},
		#{addTime,jdbcType=TIMESTAMP}
    )
  </insert>
  <update id="update" parameterType="com.local.test.reptile.pojo.po.SpiderData" >
    update spider_data
    set 
		task_id = #{taskId,jdbcType=INTEGER},
		type_id = #{typeId,jdbcType=INTEGER},
		imgSrc = #{imgSrc,jdbcType=VARCHAR},
		title = #{title,jdbcType=VARCHAR},
		abstract_content = #{abstractContent,jdbcType=VARCHAR},
		content = #{content,jdbcType=VARCHAR},
		publish_time = #{publishTime,jdbcType=TIMESTAMP},
		cy_comment_count = #{cyCommentCount,jdbcType=BIGINT},
		visit_count = #{visitCount,jdbcType=BIGINT},
		content_url = #{contentUrl,jdbcType=VARCHAR},
		tag = #{tag,jdbcType=VARCHAR},
		author = #{author,jdbcType=VARCHAR},
		starCount = #{starCount,jdbcType=INTEGER},
		add_time = #{addTime,jdbcType=TIMESTAMP}
    where 
		id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="get" resultMap="resultMap2" parameterType="java.lang.String" >
    select 
    	t.id,
		t.task_id,
		t.type_id,
		t.imgSrc,
		t.title,
		t.abstract_content,
		t.content,
		t.publish_time,
		t.cy_comment_count,
		t.visit_count,
		t.content_url,
		t.tag,
		t.author,
		t.starCount,
		t.add_time, 
		t2.platform_id 
    from spider_data t left join spider_type t2 on t.type_id=t2.id
    where 
		t.id = #{id,jdbcType=VARCHAR}
  </select>
</mapper>